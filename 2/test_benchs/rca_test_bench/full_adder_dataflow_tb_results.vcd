$date
  Fri Jul 26 14:05:52 2019
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module textio $end
$upscope $end
$scope module rca_dataflow_tb $end
$var reg 4 ! a_sig[3:0] $end
$var reg 4 " b_sig[3:0] $end
$var reg 1 # cin_sig $end
$var reg 4 $ s_sig[3:0] $end
$var reg 1 % cout_sig $end
$scope module dut $end
$var reg 4 & a[3:0] $end
$var reg 4 ' b[3:0] $end
$var reg 1 ( cin $end
$var reg 4 ) s[3:0] $end
$var reg 1 * cout $end
$var reg 4 + cout_i[3:0] $end
$scope module f0 $end
$var reg 1 , a $end
$var reg 1 - b $end
$var reg 1 . cin $end
$var reg 1 / s $end
$var reg 1 0 cout $end
$upscope $end
$scope module f1 $end
$var reg 1 1 a $end
$var reg 1 2 b $end
$var reg 1 3 cin $end
$var reg 1 4 s $end
$var reg 1 5 cout $end
$upscope $end
$scope module f2 $end
$var reg 1 6 a $end
$var reg 1 7 b $end
$var reg 1 8 cin $end
$var reg 1 9 s $end
$var reg 1 : cout $end
$upscope $end
$scope module f3 $end
$var reg 1 ; a $end
$var reg 1 < b $end
$var reg 1 = cin $end
$var reg 1 > s $end
$var reg 1 ? cout $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0000 !
b0000 "
0#
b0000 $
0%
b0000 &
b0000 '
0(
b0000 )
0*
b0000 +
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
#10000000
#20000000
1#
b0001 $
1(
b0001 )
1.
1/
#30000000
b0100 !
b0001 "
b0110 $
b0100 &
b0001 '
b0110 )
b0001 +
1-
0/
10
13
14
16
19
#40000000
b0111 "
b1100 $
b0111 '
b1100 )
b0111 +
12
04
15
17
18
19
1:
1=
1>
#50000000
b1111 !
b0000 "
b0000 $
1%
b1111 &
b0000 '
b0000 )
1*
b1111 +
1,
0-
11
02
07
09
1;
0>
1?
#60000000
b0001 "
b0001 $
b0001 '
b0001 )
1-
1/
#70000000
b1111 "
0#
b1110 $
b1111 '
0(
b1110 )
0.
0/
12
14
17
19
1<
1>
#80000000
b1000 !
b1000 "
b0000 $
b1000 &
b1000 '
b0000 )
b1000 +
0,
0-
00
01
02
03
04
05
06
07
08
09
0:
0=
0>
#90000000
1#
b0001 $
1(
b0001 )
1.
1/
